{"version":3,"sources":["components/AddToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","state","id","task","status","handleIdChange","event","setState","target","value","handleTaskChange","handleStatusChange","handleToDoSubmit","preventDefault","props","onAdd","Status","onSubmit","this","className","onChange","placeholder","handleTitleChange","type","Component","ToDoList","todos","deleteToDo","todo","filteredItems","filter","x","editToDo","map","Id","addToDo","style","alignItems","justifyContent","color","onClick","icon","library","add","faTrash","faEdit","faPlus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.064e54d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class AddTodo extends Component {\n\n    state = {\n        id: \"\",\n        task: \"\",\n        status: \"Pending\"\n    };\n\n    handleIdChange = (event) => {\n        this.setState({\n            id: event.target.value\n        });\n    };\n    handleTaskChange = (event) => {\n        this.setState({\n            task: event.target.value\n        });\n    }\n    handleStatusChange = (event) => {\n        this.setState({\n            status: event.target.value\n        });\n    };\n\n    handleToDoSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAdd({\n            id: this.state.id,\n            task: this.state.task,\n            Status: this.state.status\n        });\n        this.setState({\n            id: \"\",\n            task: \"\",\n            status: \"Pending\"\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    Add ToDo\n                </h3>\n                <form onSubmit={this.handleToDoSubmit} >\n                    <div className=\"form-group\" >\n                        <input value={this.state.id} onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\" />\n                    </div>\n                    <div className=\"form-group\" >\n                        <input value={this.state.task} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <select value={this.state.status} onChange={this.handleStatusChange} className=\"form-control\" >\n                            <option value=\"Done\" >Done</option>\n                            <option value=\"Pending\" >Pending</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"form-control btn btn-primary\" >Add Todo</button>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AddTodo from './AddToDo';\n\nclass ToDoList extends Component {\n    state = {\n        todos: [\n            { id: 1, task: 'To complete the ecommerce project', status: 'Pending' },\n            { id: 2, task: 'To complete the React native project', status: 'Done' }\n        ]\n    };\n\n    deleteToDo = (todo) => {\n        const filteredItems = this.state.todos.filter(x => x.id !== todo.id);\n\n        this.setState({\n            todos: filteredItems\n        });\n    }\n\n    editToDo = (x) => {\n        this.setState(state => ({\n            todos: state.todos.map(todo => {\n                if (todo.Id === x.Id) {\n                    return {\n                        ...todo,\n                        status: todo.status === \"Done\" ? \"Done\" : \"Done\"\n                    };\n                } else {\n                    return todo;\n                }\n            })\n        }));\n    };\n\n    addToDo = (todo) => {\n        this.setState({\n            todos: [...this.state.todos, todo]\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <AddTodo onAdd={this.addToDo}></AddTodo>\n                <h1 style={{ alignItems: 'center', justifyContent: 'center' }}>ToDoList</h1>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Task</th>\n                            <th>Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.todos.map(x => {\n                            return (\n                                <tr key={x.id}>\n                                    <td>{x.id}</td>\n                                    <td>{x.task}</td>\n                                    <td style={{ color: x.status === 'Done' ? \"green\" : \"red\" }}>{x.status}</td>\n                                    <td>\n                                        <button className=\"btn btn-primary\" onClick={() => this.deleteToDo(x)}>\n                                            <span>\n                                                <FontAwesomeIcon icon=\"trash\"></FontAwesomeIcon>\n                                            </span>\n                                        </button>\n                                        <button className=\"btn btn-primary\" onClick={() => this.editToDo(x)}>\n                                            <span>\n                                                <FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\n                                            </span>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;\n","import './App.css';\nimport ToDoList from './components/ToDoList';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash, faEdit, faPlus);\n\nfunction App() {\n  return (\n    <div >\n      <header className='App-header'>\n        <ToDoList></ToDoList>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}